COMMENT	THIS SCRIPT COMPUTES CONFIDENCE INTERVALS FOR THE NONCENTRALITY PARAMETER
COMMENT	FOR THE NONCENTRAL F DISTRIBUTION AND CONVERTS THAT INTO A CONFIDENCE INTERVAL 
COMMENT	FOR MULTIPLE (OR PARTIAL) R-SQUARED.
COMMENT	IT USES THE SPSS NONCENTRAL F CALCULATOR AND LAUBSCHER'S (1960) NORMAL APPROXIMATION,
COMMENT	WITH A DECISION RULE FOR CHOOSING BETWEEN THEM. THE REASON FOR THIS IS THAT THE 
COMMENT	NONCENTRAL F ALGORITHM FAILS FOR LARGE SAMPLE SIZE OR FOR HIGH VALUES OF R-SQUARED.
COMMENT	THE FIRST PART USES THE NONCENTRAL F CALCULATOR IN SPSS.
COMMENT	THIS COMPUTES THE LOWER LIMIT ON THE F NONCENTRALITY PARAMETER.
COMPUTE #LC3 = FVAL .
COMPUTE LC2 = FVAL/2 .
COMPUTE #LC1 = .001 .
COMPUTE #ULIM = 1-(1-CONF)/2 .
COMPUTE #CUMF1 = NCDF.F(FVAL,DF1,DF2,#LC1) .
LOOP IF (#CUMF1 LT #ULIM) .
+	COMPUTE LC2 = #LC1 .
+	COMPUTE #LC1 = #LC1/4 .
+	COMPUTE #CUMF1 = NCDF.F(FVAL,DF1,DF2,#LC1) .
END LOOP .
COMPUTE #CUMF3 = NCDF.F(FVAL,DF1,DF2,#LC3) .
LOOP IF (#CUMF3 GT #ULIM) .
+	COMPUTE LC2 = #LC3 .
+	COMPUTE #LC3 = #LC3 + FVAL .
+	COMPUTE #CUMF3 = NCDF.F(FVAL,DF1,DF2,#LC3) .
END LOOP .
COMPUTE #CUMF2 = NCDF.F(FVAL,DF1,DF2,LC2) .
COMPUTE #DIFF = 1 .
LOOP IF (#DIFF GT .00005) .
+	DO IF (#CUMF2 LT #ULIM) .
+		COMPUTE #LC3 = LC2 .
+		COMPUTE LC2 = (LC2 + #LC1)/2 .
+		COMPUTE #CUMF2 = NCDF.F(FVAL,DF1,DF2,LC2) .
+	ELSE .
+		COMPUTE #LC1 = LC2 .
+		COMPUTE LC2 = (LC2 + #LC3)/2 .
+		COMPUTE #CUMF2 = NCDF.F(FVAL,DF1,DF2,LC2) .
+	END IF .
+	COMPUTE #DIFF = ABS(#CUMF2 - #ULIM) .
END LOOP .
COMPUTE UCDF  = NCDF.F(FVAL,DF1,DF2,LC2) .
EXECUTE .
COMMENT	
COMMENT	THIS COMPUTES THE UPPER LIMIT ON THE F NONCENTRALITY PARAMETER.
COMPUTE #UC3 = 3*FVAL .
COMPUTE UC2 = 2*FVAL .
COMPUTE #UC1 = FVAL .
COMPUTE #LLIM = (1-CONF)/2 .
COMPUTE #CUMF1 = NCDF.F(FVAL,DF1,DF2,#UC1) .
LOOP IF (#CUMF1 LT #LLIM) .
+	COMPUTE UC2 = #UC1 .
+	COMPUTE #UC1 = #UC1/4 .
+	COMPUTE #CUMF1 = NCDF.F(FVAL,DF1,DF2,#UC1) .
END LOOP .
COMPUTE #CUMF3 = NCDF.F(FVAL,DF1,DF2,#UC3) .
LOOP IF (#CUMF3 GT #LLIM) .
+	COMPUTE UC2 = #UC3 .
+	COMPUTE #UC3 = #UC3 + FVAL .
+	COMPUTE #CUMF3 = NCDF.F(FVAL,DF1,DF2,#UC3) .
END LOOP .
COMPUTE #CUMF2 = NCDF.F(FVAL,DF1,DF2,UC2) .
COMPUTE #DIFF = 1 .
LOOP IF (#DIFF GT .00001) .
+	DO IF (#CUMF2 LT #LLIM) .
+		COMPUTE #UC3 = UC2 .
+		COMPUTE UC2 = (UC2 + #UC1)/2 .
+		COMPUTE #CUMF2 = NCDF.F(FVAL,DF1,DF2,UC2) .
+	ELSE .
+		COMPUTE #UC1 = UC2 .
+		COMPUTE UC2 = (UC2 + #UC3)/2 .
+		COMPUTE #CUMF2 = NCDF.F(FVAL,DF1,DF2,UC2) .
+	END IF .
+	COMPUTE #DIFF = ABS(#CUMF2 - #LLIM) .
END LOOP .
COMPUTE LCDF  = NCDF.F(FVAL,DF1,DF2,UC2) .
COMMENT	
COMMENT	THIS NEXT STATEMENT COMPUTES THE POWER IN RELATION TO THE F VALUE.
COMPUTE POWER = 1 - NCDF.F(IDF.F(1-(1-CONF)/2,DF1,DF2),DF1,DF2,FVAL*(DF1/DF2)*(DF1+DF2+1)) .
EXECUTE .

COMMENT	THE SECOND PART USES LAUBSCHER'S SQUARE-ROOT APPROXIMATION.
COMMENT	THIS COMPUTES THE LOWER LIMIT ON THE F NONCENTRALITY PARAMETER.
COMPUTE #LLC3 = FVAL .
COMPUTE #LLC2 = FVAL/2 .
COMPUTE #LLC1 = .001 .
COMPUTE #ULIM = 1-(1-CONF)/2 .
COMPUTE #CUMF1 = 1-CDFNORM((Sqrt(2*(DF1+#LLC1)-((DF1+2*#LLC1)/(DF1+#LLC1)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#LLC1)/(DF1+#LLC1)))) .
LOOP IF (#CUMF1 LT #ULIM) .
+	COMPUTE #LLC2 = #LLC1 .
+	COMPUTE #LLC1 = #LLC1/4 .
+	COMPUTE #CUMF1 = 1-CDFNORM((Sqrt(2*(DF1+#LLC1)-((DF1+2*#LLC1)/(DF1+#LLC1)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#LLC1)/(DF1+#LLC1)))) .
END LOOP .
COMPUTE #CUMF3 = 1-CDFNORM((Sqrt(2*(DF1+#LLC3)-((DF1+2*#LLC3)/(DF1+#LLC3)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#LLC3)/(DF1+#LLC3)))) .
LOOP IF (#CUMF3 GT #ULIM) .
+	COMPUTE #LLC2 = #LLC3 .
+	COMPUTE #LLC3 = #LLC3 + FVAL .
+	COMPUTE #CUMF3 = 1-CDFNORM((Sqrt(2*(DF1+#LLC3)-((DF1+2*#LLC3)/(DF1+#LLC3)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#LLC3)/(DF1+#LLC3)))) .
END LOOP .
COMPUTE #CUMF2 = 1-CDFNORM((Sqrt(2*(DF1+#LLC2)-((DF1+2*#LLC2)/(DF1+#LLC2)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#LLC2)/(DF1+#LLC2)))) .
COMPUTE #DIFF = 1 .
LOOP IF (#DIFF GT .00005) .
+	DO IF (#CUMF2 LT #ULIM) .
+		COMPUTE #LLC3 = #LLC2 .
+		COMPUTE #LLC2 = (#LLC2 + #LLC1)/2 .
+		COMPUTE #CUMF2 = 1-CDFNORM((Sqrt(2*(DF1+#LLC2)-((DF1+2*#LLC2)/(DF1+#LLC2)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#LLC2)/(DF1+#LLC2)))) .
+	ELSE .
+		COMPUTE #LLC1 = #LLC2 .
+		COMPUTE #LLC2 = (#LLC2 + #LLC3)/2 .
+		COMPUTE #CUMF2 = 1-CDFNORM((Sqrt(2*(DF1+#LLC2)-((DF1+2*#LLC2)/(DF1+#LLC2)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#LLC2)/(DF1+#LLC2)))) .
+	END IF .
+	COMPUTE #DIFF = ABS(#CUMF2 - #ULIM) .
END LOOP .
COMPUTE #UUCDF  = 1-CDFNORM((Sqrt(2*(DF1+#LLC2)-((DF1+2*#LLC2)/(DF1+#LLC2)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#LLC2)/(DF1+#LLC2)))) .
COMMENT	NOW CHOOSE THE METHOD TO USE FOR THE FINAL ESTIMATES. 
COMPUTE	R2 = FVAL*DF1/(FVAL*DF1+DF2) .
COMPUTE	LR2 = LC2/(LC2+DF2+DF1+1) .
COMPUTE	#LLR2 = #LLC2/(#LLC2+DF2+DF1+1) .
DO IF 	(ABS(LR2 - #LLR2) >= .01 OR LR2 > R2) . 
+	COMPUTE	LC2 = #LLC2 .
+	COMPUTE	UCDF = #UUCDF .
+	COMPUTE	LR2 = #LLR2 .
END IF .
EXECUTE .
COMMENT	
COMMENT	THIS COMPUTES THE UPPER LIMIT ON THE F NONCENTRALITY PARAMETER.
COMPUTE #UUC3 = 3*FVAL .
COMPUTE #UUC2 = 2*FVAL .
COMPUTE #UUC1 = FVAL .
COMPUTE #LLIM = (1-CONF)/2 .
COMPUTE #CUMF1 = 1-CDFNORM((Sqrt(2*(DF1+#UUC1)-((DF1+2*#UUC1)/(DF1+#UUC1)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#UUC1)/(DF1+#UUC1)))) .
LOOP IF (#CUMF1 LT #LLIM) .
+	COMPUTE #UUC2 = #UUC1 .
+	COMPUTE #UUC1 = #UUC1/4 .
+	COMPUTE #CUMF1 = 1-CDFNORM((Sqrt(2*(DF1+#UUC1)-((DF1+2*#UUC1)/(DF1+#UUC1)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#UUC1)/(DF1+#UUC1)))) .
END LOOP .
COMPUTE #CUMF3 = 1-CDFNORM((Sqrt(2*(DF1+#UUC3)-((DF1+2*#UUC3)/(DF1+#UUC3)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#UUC3)/(DF1+#UUC3)))) .
LOOP IF (#CUMF3 GT #LLIM) .
+	COMPUTE #UUC2 = #UUC3 .
+	COMPUTE #UUC3 = #UUC3 + FVAL .
+	COMPUTE #CUMF3 = 1-CDFNORM((Sqrt(2*(DF1+#UUC3)-((DF1+2*#UUC3)/(DF1+#UUC3)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#UUC3)/(DF1+#UUC3)))) .
END LOOP .
COMPUTE #CUMF2 = 1-CDFNORM((Sqrt(2*(DF1+#UUC2)-((DF1+2*#UUC2)/(DF1+#UUC2)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#UUC2)/(DF1+#UUC2)))) .
COMPUTE #DIFF = 1 .
LOOP IF (#DIFF GT .00001) .
+	DO IF (#CUMF2 LT #LLIM) .
+		COMPUTE #UUC3 = #UUC2 .
+		COMPUTE #UUC2 = (#UUC2 + #UUC1)/2 .
+		COMPUTE #CUMF2 = 1-CDFNORM((Sqrt(2*(DF1+#UUC2)-((DF1+2*#UUC2)/(DF1+#UUC2)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#UUC2)/(DF1+#UUC2)))) .
+	ELSE .
+		COMPUTE #UUC1 = #UUC2 .
+		COMPUTE #UUC2 = (#UUC2 + #UUC3)/2 .
+		COMPUTE #CUMF2 = 1-CDFNORM((Sqrt(2*(DF1+#UUC2)-((DF1+2*#UUC2)/(DF1+#UUC2)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#UUC2)/(DF1+#UUC2)))) .
+	END IF .
+	COMPUTE #DIFF = ABS(#CUMF2 - #LLIM) .
END LOOP .
COMPUTE #LLCDF  = 1-CDFNORM((Sqrt(2*(DF1+#UUC2)-((DF1+2*#UUC2)/(DF1+#UUC2)))-Sqrt((2*DF2-1)*FVAL*DF1/DF2))/
  Sqrt(DF1*FVAL/DF2+((DF1+2*#UUC2)/(DF1+#UUC2)))) .
COMMENT	
COMMENT	THIS NEXT STATEMENT COMPUTES THE POWER IN RELATION TO THE F VALUE.
COMPUTE #PPOWER = CDFNORM((Sqrt(2*(DF1+FVAL*(DF1/DF2)*(DF1+DF2+1))-((DF1+2*FVAL*(DF1/DF2)*(DF1+DF2+1))/(DF1+FVAL*(DF1/DF2)*(DF1+DF2+1))))-Sqrt((2*DF2-1)*IDF.F(1-(1-CONF)/2,DF1,DF2)*DF1/DF2))/
  Sqrt(DF1*IDF.F(1-(1-CONF)/2,DF1,DF2)/DF2+((DF1+2*FVAL*(DF1/DF2)*(DF1+DF2+1))/(DF1+FVAL*(DF1/DF2)*(DF1+DF2+1))))) .
COMMENT	NOW CHOOSE THE METHOD TO USE FOR THE FINAL ESTIMATES. 
COMPUTE	UR2 = UC2/(UC2+DF2+DF1+1) .
COMPUTE	#UUR2 = #UUC2/(#UUC2+DF2+DF1+1) .
DO IF 	(ABS(UR2 - #UUR2) >= .01 OR UR2 <= R2) . 
+	COMPUTE	UC2 = #UUC2 .
+	COMPUTE	LCDF = #LLCDF .
+	COMPUTE	UR2 = #UUR2 .
+	COMPUTE	POWER = #PPOWER .
END IF .
EXECUTE .
